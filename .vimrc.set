"title を表示
set title
"ルーラーを表示
set ruler
"行番号を表示
set number
"タブの代わりに半角スペース
set expandtab

set cursorline

" swp ファイルなし
set nobackup
set noswapfile

"java の場合 タブ4文字分
if expand("%:t") =~ ".*\.java"
  set tabstop=4
  set softtabstop=4
  set shiftwidth=4
else
  "タブ2文字分
  set tabstop=2
  set softtabstop=2
  set shiftwidth=2
endif

"encoding = utf
set encoding=utf-8
scriptencoding utf-8
" 保存する時の文字コード
set fileencoding=utf-8
" 開く時の文字コード
set fileencodings=utf-8,cp932,euc-jp
" 端末の文字コード
set termencoding=utf-8
"backspace で改行、インデント、以前入力した文字を削除できるようにする
set backspace=indent,eol,start

"ステータスラインの表示
set laststatus=2
let g:lightline = {
      \ 'component': {
      \   'readonly': '%{&readonly?"":""}',
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' }
      \ }
" set statusline=%< " 行が長すぎるときに切り詰める位置
" set statusline+=%{fugitive#statusline()}  " Gitのブランチ名を表示
" set statusline+=%f " ファイルパス(相対)
" set statusline+=\ %m " 編集フラグ
" set statusline+=%r    " %r 読み込み専用フラグ
" set statusline+=%h    " %h ヘルプバッファフラグ
" set statusline+=%w    " %w プレビューウィンドウフラグ
" set statusline+=%{'['.(&fenc!=''?&fenc:&enc).':'.&ff.']'}  " fencとffを表示
" set statusline+=%y    " バッファ内のファイルのタイプ
" set statusline+=\     " 空白スペース
" set statusline+=%=    " 左寄せ項目と右寄せ項目の区切り
" set statusline+=\ \   " 空白スペース2個
" set statusline+=%1l   " 何行目にカーソルがあるか
" set statusline+=:
" set statusline+=%L    " バッファ内の総行数
" set statusline+=,
" set statusline+=%c    " 何列目にカーソルがあるか
" set statusline+=%V    " 画面上の何列目にカーソルがあるか
" set statusline+=\ \   " 空白スペース2個
" set statusline+=%P    " ファイル内の何％の位置にあるか





" 文頭や文末で左右に動いたら次の行や前の行にいけるようにする
set whichwrap=b,s,h,l,<,>,[,]

" タブ文字とか半角とか色々を可視化
set list
set lcs=tab:>.,trail:_,extends:\

" 縦線
set cursorcolumn

" クリップボードの共有
"set clipboard=unnamed,autoselect
set clipboard+=unnamed
""set clipboard=unnamed,autoselect
""set clipboard=unnamedplus
"折りたたみ
set foldmethod=indent
set foldlevel=2

set tags=.tags

set scrolloff=12

set mouse=a
set ttymouse=xterm2

set incsearch
