### ghq and peco

function peco-src () {
  local selected_dir=$(ghq list -p | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd ${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^o' peco-src

### git branch and peco
function peco-src-git-branch () {
  local selected_branch=$(git branch -a | ruby -pe '$_.gsub!(/\*/, " ")' | ruby -pe '$_.gsub!(/#/, "\\#")' | grep -v 'HEAD -> ' | peco --query "$LBUFFER")
  if [ -n "$selected_branch" ]; then
    BUFFER="git checkout ${selected_branch}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src-git-branch
bindkey '^g' peco-src-git-branch

function peco-src-git-tag() {
  local selected_tag=$(git tag -l | ruby -pe '$_.gsub!(/\*/, " ")' | ruby -pe '$_.gsub!(/#/, "\\#")' | grep -v 'HEAD -> ' | peco --query "$LBUFFER")
  if [ -n "$selected_tag" ]; then
    BUFFER="git checkout ${selected_tag}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src-git-tag
bindkey '^t' peco-src-git-tag

function peco-history-selection() {
    # BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
    BUFFER=`history -n 1| ruby -pe 'begin; $_.gsub!(/\A(\d|\.)+ (\d|:)+  /, ""); rescue; end' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N peco-history-selection
bindkey '^R' peco-history-selection

